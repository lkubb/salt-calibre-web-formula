{#- -*- coding: utf-8 -*- #}
{#- vim: ft=jinja #}

{#-
    Convenience: Make relative paths absolute.
-#}

{%- set base_path = mapdata.lookup.paths.base %}
{%- for path, val in mapdata.lookup.paths.items() %}
  {%- if val and val is string and not val.startswith("/") %}
    {%- do mapdata.lookup.paths.update({path: base_path | path_join(val)}) %}
  {%- endif %}
{%- endfor %}

{%- if not mapdata.lookup.user.home %}
  {%- do mapdata.lookup.user.update({"home": base_path}) %}
{%- endif %}


{#-
    Convenience: If calibre is included in the container,
    set the converter path accordingly.
-#}

{%- if mapdata.container.include_calibre %}
  {%- do mapdata.config.update({"config_converterpath": "/usr/bin/ebook-convert"}) %}
{%- endif %}


{#-
    Remove values from config if they are false.
    Null/None exists in sqlite.
-#}

{%- set cleaned_config = {} %}
{%- for conf in mapdata.config %}
  {%- if mapdata.config[conf] is not false %}
    {%- do cleaned_config.update({conf: mapdata.config[conf]}) %}
  {%- endif %}
{%- endfor %}

{%- do mapdata.update({"config": cleaned_config}) %}


{#-
    Convenience: Make sure container puid/pgid is the same as uid/gid when
    userns=keep-id is in use.
-#}

{%- if mapdata.container.userns_keep_id %}
  {%- set pgid = mapdata.container.pgid or mapdata.lookup.media_group.gid or mapdata.lookup.user.gid or none %}
  {%- set puid = mapdata.container.puid or mapdata.lookup.user.uid or none %}
  {%- do mapdata.container.update({"pgid": pgid, "puid": puid}) %}
{%- endif %}


{#-
    If userns_keep_id is in use, it has to be passed to the pod if pods
    are in use.
-#}

{%- if mapdata.container.userns_keep_id and mapdata.install.rootless %}
  {%- if mapdata.lookup.compose.create_pod is not false %}
    {%- do mapdata | append_dict_key_value("lookup:compose:pod_args", {"userns": "keep-id"}) %}
  {%- endif %}
{%- endif %}
